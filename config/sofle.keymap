#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    homerow_left: homerow_left {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_LEFT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <250>;
        flavor = "hold-preferred";
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59 32 45 58 19 6 26 13 39 1 2 3 4 5 57 56>;
    };

    homerow_right: homerow_right {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_RIGHT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <250>;
        flavor = "hold-preferred";
        hold-trigger-key-positions = <0 1 13 14 15 16 17 18 19 26 27 28 29 30 31 32 39 40 41 42 43 44 52 53 54 55 56 58 0 1 2 3 4 5 6 13 14 15 16 17 18 32 45 58 7 8 9 10 11 12 25 38 59 60>;
    };

    togglelong: togglelong {
        compatible = "zmk,behavior-hold-tap";
        label = "TOGGLELONG";
        bindings = <&tog>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    holdtaptappreferred: holdtaptappreferred {
        compatible = "zmk,behavior-hold-tap";
        label = "HOLDTAPTAPPREFERRED";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    combos {
        compatible = "zmk,combos";

        Copy {
            bindings = <&kp RC(C)>;
            key-positions = <29 28>;
        };

        Paste {
            bindings = <&kp RC(V)>;
            key-positions = <30 29>;
        };

        ctl-z {
            bindings = <&kp LC(Z)>;
            key-positions = <15 16>;
        };

        Cut {
            bindings = <&kp RC(X)>;
            key-positions = <31 30>;
        };

        Select-all {
            bindings = <&kp RC(A)>;
            key-positions = <16 17>;
        };

        enter-left {
            bindings = <&kp ENTER>;
            key-positions = <44 43>;
        };
    };

    macros {
        accent1: accent1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&accent1>;
            label = "ACCENT1";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&trans                &trans                    &trans                    &trans                        &trans                      &trans       &kp UP_ARROW     &trans         &trans                       &trans                         &trans                     &trans                        &trans
&trans                &kp Q                     &kp W                     &kp E                         &holdtaptappreferred R R    &kp T        &kp DOWN_ARROW   &kp Y          &holdtaptappreferred U U     &holdtaptappreferred I I       &kp O                      &kp P                         &trans
&togglelong 3 ESCAPE  &homerow_left LEFT_WIN A  &homerow_left LEFT_ALT S  &homerow_left LEFT_CONTROL D  &homerow_left LEFT_SHIFT F  &kp G        &kp LEFT_ARROW   &kp H          &homerow_right LEFT_SHIFT J  &homerow_right LEFT_CONTROL K  &homerow_right LEFT_ALT L  &homerow_right LEFT_GUI SEMI  &holdtaptappreferred NON_US_BACKSLASH APOS
&trans                &kp Z                     &kp X                     &kp C                         &kp V                       &kp B        &kp RIGHT_ARROW  &kp N          &kp M                        &kp COMMA                      &kp DOT                    &kp FSLH                      &trans
&kp C_MUTE            &trans                    &trans                    &lt 5 LEFT_WIN                &lt 1 TAB                   &kp SPACE    &kp ENTER        &kp BACKSPACE  &lt 2 ENTER                  &lt 4 LEFT_ALT                 &trans                     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "main";
        };

        layer_1 {
            bindings = <
&trans      &trans            &trans           &trans            &trans           &trans                  &mmv MOVE_UP     &trans                 &trans          &trans        &trans        &trans                            &trans
&trans      &mt TILDE GRAVE   &kp PRINTSCREEN  &kp UP_ARROW      &bt BT_SEL 0     &kp LEFT_BRACE          &mmv MOVE_DOWN   &kp RIGHT_BRACE        &kp N7          &kp N8        &kp N9        &kp N0                            &trans
&trans      &kp LEFT_CONTROL  &kp LEFT_ARROW   &kp DOWN_ARROW    &kp RIGHT_ARROW  &kp LEFT_PARENTHESIS    &mmv MOVE_LEFT   &kp RIGHT_PARENTHESIS  &kp NUMBER_4    &kp N5        &kp NUMBER_6  &holdtaptappreferred UNDER MINUS  &holdtaptappreferred EQUAL PLUS
&trans      &kp LEFT_WIN      &kp LEFT_ALT     &kp LEFT_CONTROL  &kp LEFT_SHIFT   &kp LEFT_BRACKET        &mmv MOVE_RIGHT  &kp RIGHT_BRACKET      &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK                      &trans
&kp C_MUTE  &trans            &trans           &trans            &trans           &trans                  &mkp LCLK        &kp DELETE             &kp LEFT_SHIFT  &trans        &trans        &trans
            >;

            display-name = "numpad";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &trans           &trans  &trans    &trans      &trans         &mmv MOVE_UP     &trans     &trans         &trans        &trans     &trans             &trans
&trans  &kp F1           &kp F2  &kp F3    &kp F4      &kp F5         &mmv MOVE_DOWN   &kp F6     &kp F7         &kp F8        &kp F9     &kp F10            &trans
&trans  &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &mmv MOVE_LEFT   &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp SQT    &kp DOUBLE_QUOTES  &trans
&trans  &trans           &trans  &kp F11   &kp F12     &trans         &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL      &trans        &soft_off  &bootloader        &trans
&trans  &trans           &trans  &trans    &trans      &trans         &mkp LCLK        &trans     &trans         &trans        &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Symbols";
        };

        layer_3 {
            display-name = "Type only";
            bindings = <
&trans      &trans  &kp N2  &kp N3          &kp N4  &kp N5    &kp UP_ARROW     &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp EQUAL
&trans      &kp Q   &kp W   &kp E           &kp R   &kp T     &kp DOWN_ARROW   &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSLH
&trans      &kp A   &kp S   &kp D           &kp F   &kp G     &kp LEFT_ARROW   &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&trans      &kp Z   &kp X   &kp C           &kp V   &kp B     &kp RIGHT_ARROW  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
&kp C_MUTE  &trans  &trans  &kp LEFT_SHIFT  &trans  &trans    &kp ENTER        &trans  &trans  &trans     &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans        &trans        &trans           &trans          &trans  &trans      &trans            &trans          &trans           &trans  &trans
&trans  &trans  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0     &out OUT_BLE    &trans  &trans      &mkp LCLK         &mmv MOVE_UP    &mkp RCLK        &trans  &trans
&trans  &trans  &bl BL_DEC    &bl BL_INC    &bl BL_TOG       &out OUT_USB    &trans  &trans      &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans        &trans        &rgb_ug RGB_EFF  &trans          &trans  &kp K_PREV  &kp C_PLAY_PAUSE  &kp K_NEXT      &trans           &trans  &trans
&trans  &trans  &trans        &trans        &trans           &trans          &trans  &trans      &trans            &trans          &trans           &trans
            >;
        };

        ArrowsFunc {
            bindings = <
&trans  &trans        &trans        &trans            &trans          &trans    &trans  &trans  &trans          &trans          &trans           &trans  &trans
&trans  &kt F4        &kp F3        &kp F2            &kp F1          &trans    &trans  &trans  &trans          &kp UP_ARROW    &trans           &trans  &trans
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &kp F12       &kp F11       &kp F10           &kp F9          &trans    &trans  &trans  &kp F5          &kp F6          &kp F7           &kp F8  &trans
&trans  &trans        &trans        &trans            &trans          &trans    &trans  &trans  &trans          &trans          &trans           &trans
            >;

            label = "ArrowsFunc";
        };
    };
};
